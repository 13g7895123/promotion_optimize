openapi: 3.0.0
info:
  title: Server Management API
  version: 1.0.0
  description: Game server registration, approval, and settings management

servers:
  - url: http://localhost:8080/api

tags:
  - name: Servers
    description: Server lifecycle management
  - name: Server Settings
    description: Server configuration and database settings

paths:
  /servers:
    get:
      tags: [Servers]
      summary: List all servers
      security:
        - sessionAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, approved, rejected, suspended, inactive]
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Server list retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Server'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
    
    post:
      tags: [Servers]
      summary: Register new server
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerCreateRequest'
      responses:
        '200':
          description: Server registered successfully
        '400':
          description: Validation error

  /servers/{id}:
    get:
      tags: [Servers]
      summary: Get server details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Server details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
    
    put:
      tags: [Servers]
      summary: Update server
      security:
        - sessionAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerUpdateRequest'
      responses:
        '200':
          description: Server updated

  /servers/{id}/approve:
    post:
      tags: [Servers]
      summary: Approve server registration
      security:
        - sessionAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Server approved

  /servers/{id}/reject:
    post:
      tags: [Servers]
      summary: Reject server registration
      security:
        - sessionAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
      responses:
        '200':
          description: Server rejected

components:
  securitySchemes:
    sessionAuth:
      type: apiKey
      in: header
      name: X-Session-Token

  schemas:
    Server:
      type: object
      properties:
        id:
          type: integer
        server_name:
          type: string
        server_code:
          type: string
        game_type:
          type: string
        status:
          type: string
          enum: [pending, approved, rejected, suspended, inactive]
        owner_id:
          type: integer
        created_at:
          type: string
          format: date-time

    ServerCreateRequest:
      type: object
      required:
        - server_name
        - game_type
        - description
      properties:
        server_name:
          type: string
        game_type:
          type: string
        version:
          type: string
        description:
          type: string
        server_ip:
          type: string
        server_port:
          type: integer

    ServerUpdateRequest:
      type: object
      properties:
        server_name:
          type: string
        description:
          type: string
        max_players:
          type: integer

    Pagination:
      type: object
      properties:
        current_page:
          type: integer
        total_pages:
          type: integer
        total_items:
          type: integer
        items_per_page:
          type: integer
