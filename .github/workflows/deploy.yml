name: Deploy to Production

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
        coverage: none
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
      
    - name: Install backend dependencies
      working-directory: ./backend
      run: composer install --no-dev --optimize-autoloader
      
    - name: Run backend tests
      working-directory: ./backend
      run: composer test
      
    - name: Create deployment artifact
      run: |
        mkdir -p deploy
        cp -r frontend/dist deploy/frontend
        cp -r backend deploy/backend
        cp docker-compose.yml deploy/
        cp .env.example deploy/.env
        cp nginx/nginx.conf deploy/nginx.conf
        
    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd /var/www/promotion
          git pull origin master
          docker-compose down
          docker-compose build --no-cache
          docker-compose up -d
          docker-compose exec -T backend php spark migrate
          
    - name: Health check
      run: |
        sleep 30
        curl -f ${{ secrets.APP_URL }}/api/health || exit 1
        
    - name: Notify deployment status
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}