services:
  mysql_test:
    image: mysql:8.0
    container_name: promotion_mysql_test
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_test_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - promotion_test_network

  redis_test:
    image: redis:7-alpine
    container_name: promotion_redis_test
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_test_data:/data
    networks:
      - promotion_test_network

  phpmyadmin_test:
    image: phpmyadmin/phpmyadmin
    container_name: promotion_phpmyadmin_test
    restart: unless-stopped
    environment:
      PMA_HOST: mysql_test
      PMA_PORT: 3306
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "${PHPMYADMIN_PORT}:80"
    depends_on:
      - mysql_test
    networks:
      - promotion_test_network

  backend_test:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: promotion_backend_test
    restart: unless-stopped
    command: ["sh", "-c", "cd /var/www/html && php -S 0.0.0.0:8080 -t public"]
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
    ports:
      - "${BACKEND_PORT}:8080"
    volumes:
      - ./backend:/var/www/html
      - ./backend/storage:/var/www/html/storage
      - ./backend/logs:/var/www/html/logs
    depends_on:
      - mysql_test
      - redis_test
    networks:
      - promotion_test_network

  frontend_test:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: promotion_frontend_test
    restart: unless-stopped
    environment:
      API_BASE_URL: http://localhost:${BACKEND_PORT}/api
      NUXT_HOST: 0.0.0.0
      NUXT_PORT: 3000
    ports:
      - "${FRONTEND_PORT}:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.nuxt
      - /app/dist
    depends_on:
      - backend_test
    networks:
      - promotion_test_network

volumes:
  mysql_test_data:
    driver: local
  redis_test_data:
    driver: local

networks:
  promotion_test_network:
    driver: bridge